//----------------------------------------------//
// WISP 5.0 FW Todo
//----------------------------------------------//

- Receive chain: receive timer ISR needs to use CCR deltas instead of clearing TAR in software. Clearing leads to timing offsets and variability.

- We need to be able to enable interrupts in user code. doRFID should clean up after itself (in terms of enabled interrupts) so we can safely do this.

- Tag needs to properly implement (at least most of) the tag state machine as described in Gen 2 docs (e.g., currently it's responding to every single ack).

- Power management updates: low_power_sleep() and any other power mgmt functions need to be implemented. Pwr mgmt scheme should be discussed before updates are made.

- Turn off RECEIVE_ENABLE when demodulator is not needed.

- Get rid of inappropriate comments!

- Make function header comments consistent across all documents and assembly/C. Do we need Pre/Post conditions?

- Rename cryptic functions, files, and variables to better reflect their functionality.

//----------------------------------------------//
// WISP 5.0 FW Wishlist
//----------------------------------------------//

- Clean up the calibration FW set so the average user can follow what's going on, and make it faster if possible.

- Add supply voltage monitoring in cal routine so the routine only runs when 1.8V power detected. It will incorrectly calibrate if calibration voltage is too high due to voltage sensitivity of DCO.

- Increase T->R LF to 640 kHz (b/c we can run at 8MHz @ 1.8V)

- Pull extraneous commentary and instead generate a set of descriptive files or walkthroughs for new WISP users.

- Implement receive chain using DMA module (Capture edges to memory and post-process, instead of interrupting)

- Test for compatibility with various readers (especially Thingmagic small form factor readers and cheap MTI USB dongle readers)

//----------------------------------------------//
// THINGS TO DISCUSS
//----------------------------------------------//

- Why is memory bank 1 called UII in ReadHandle.asm? Shouldn't it be EPC?

- What if any is the timeout mechanism in each of the waitOnBits_x loops in Read/WriteHandle?

- Shouldn't function names be "xxxHandler" instead of "xxxHandle"? The term Handle doesn't seem to fit here

- Is there an obvious conflict with dynamically updating rfid.mode throughout operation, for instance, in usr.c? In other words, are successive runs of doRFID() completely isolated, or is some state preserved between them?

- reqRN_badHandle seems to be executed after a successful read... any idea why?

- Read cmd does not set abort flag in any case.

- NOTE: Ack doesn't work if reader is trying to perform READ and we have it disabled on the WISP. Maybe reader SM is causing this.

- Should we disable the RX comparator after every read/write/ack etc?


//----------------------------------------------//
// DONE:
//----------------------------------------------//

- Sensors "and" systems -> Sensor Systems

- Change TX/RX/RX Enable port mapping for compatibility with 5310IPTR

